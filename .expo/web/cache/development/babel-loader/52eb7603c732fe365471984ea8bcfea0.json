{"ast":null,"code":"import { useContext, useEffect } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { SimpsonsDataContext } from \"../store/context/simpsons-data\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction SimpsonsList(_ref) {\n  var imgURL = _ref.imgURL,\n      name = _ref.name,\n      isLoading = _ref.isLoading,\n      id = _ref.id,\n      index = _ref.index,\n      deleteHandler = _ref.deleteHandler,\n      upHandler = _ref.upHandler,\n      downHandler = _ref.downHandler;\n  var navigation = useNavigation();\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(Button, {\n          title: \"Add Simpson\",\n          onPress: function onPress() {\n            return navigation.navigate('AddSimpson');\n          }\n        });\n      }\n    });\n  }, []);\n\n  function selectSimpson() {\n    navigation.navigate('SimpsonDetail', {\n      simpId: id,\n      simpImg: imgURL,\n      simpTitle: name\n    });\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Pressable, {\n      onPress: selectSimpson,\n      android_ripple: {\n        color: '#ccc'\n      },\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.button, pressed ? styles.buttonPressed : null];\n      },\n      children: _jsx(View, {\n        style: styles.simpContainer,\n        children: _jsxs(View, {\n          style: styles.listSimp,\n          children: [_jsxs(View, {\n            style: styles.listSimp,\n            children: [_jsxs(Text, {\n              style: styles.textSimp,\n              children: [\" \", index + 1, \" \"]\n            }), _jsx(Image, {\n              source: {\n                uri: imgURL && imgURL.split(\"revision\")[0]\n              },\n              style: {\n                width: 40,\n                height: 40,\n                resizeMode: 'contain'\n              }\n            }), _jsxs(Text, {\n              style: styles.textSimp,\n              children: [\" \", name, \" \"]\n            })]\n          }), _jsxs(View, {\n            style: styles.iconContainer,\n            children: [_jsx(TouchableHighlight, {\n              onPress: function onPress() {\n                return upHandler(id);\n              },\n              children: _jsx(Image, {\n                source: require(\"../data/images/up-arrow.png\"),\n                style: {\n                  width: 20,\n                  height: 20,\n                  resizeMode: 'contain'\n                }\n              })\n            }), _jsx(TouchableHighlight, {\n              onPress: function onPress() {\n                return downHandler(id);\n              },\n              children: _jsx(Image, {\n                source: require(\"../data/images/down-arrow.png\"),\n                style: {\n                  width: 20,\n                  height: 20,\n                  resizeMode: 'contain'\n                }\n              })\n            }), _jsx(TouchableHighlight, {\n              onPress: function onPress() {\n                return deleteHandler(id);\n              },\n              children: _jsx(Image, {\n                source: require(\"../data/images/trash-bin.png\"),\n                style: {\n                  width: 20,\n                  height: 20,\n                  resizeMode: 'contain'\n                }\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#311b3b',\n    alignItems: 'stretch',\n    justifyContent: 'center',\n    paddingTop: '8%',\n    paddingHorizontal: 16\n  },\n  simpContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    borderBottomWidth: 1\n  },\n  listSimp: {\n    paddingVertical: 16,\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  textSimp: {\n    color: '#fff'\n  },\n  iconContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  }\n});\nexport default SimpsonsList;","map":{"version":3,"names":["useContext","useEffect","SimpsonsDataContext","useNavigation","SimpsonsList","imgURL","name","isLoading","id","index","deleteHandler","upHandler","downHandler","navigation","setOptions","headerRight","navigate","selectSimpson","simpId","simpImg","simpTitle","styles","container","color","pressed","button","buttonPressed","simpContainer","listSimp","textSimp","uri","split","width","height","resizeMode","iconContainer","require","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","paddingTop","paddingHorizontal","flexDirection","borderBottomWidth","paddingVertical"],"sources":["/Users/yigitcanderya/Desktop/simpsons-task/components/SimpsonsList.js"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { Pressable, Button, Text, View, StyleSheet, Platform, Image, TouchableHighlight } from \"react-native\";\nimport { SimpsonsDataContext } from \"../store/context/simpsons-data\";\nimport { useNavigation } from '@react-navigation/native'\n\nfunction SimpsonsList({ imgURL, name, isLoading, id, index, deleteHandler, upHandler, downHandler }) {\n\n    const navigation = useNavigation();\n\n    useEffect(() => {\n        navigation.setOptions(\n            {\n                headerRight: () => {\n                    return <Button title=\"Add Simpson\" onPress={() => navigation.navigate('AddSimpson')} />\n                }\n            }\n        )\n    }, [])\n\n    function selectSimpson() {\n        navigation.navigate('SimpsonDetail', {\n            simpId: id,\n            simpImg: imgURL,\n            simpTitle: name,\n\n        });\n    }\n\n    return (\n\n        <View style={styles.container}>\n            <Pressable onPress={selectSimpson} android_ripple={{ color: '#ccc' }} style={({ pressed }) => [styles.button, pressed ? styles.buttonPressed : null,]} >\n                <View style={styles.simpContainer} >\n                    <View style={styles.listSimp}>\n                        <View style={styles.listSimp}>\n                            <Text style={styles.textSimp}> {index + 1} </Text>\n                            <Image source={{ uri: imgURL && imgURL.split(\"revision\")[0] }} style={{ width: 40, height: 40, resizeMode: 'contain' }} />\n                            <Text style={styles.textSimp} > {name} </Text>\n                        </View>\n                        <View style={styles.iconContainer} >\n                            <TouchableHighlight onPress={() => upHandler(id)}>\n                                <Image source={require('../data/images/up-arrow.png')} style={{ width: 20, height: 20, resizeMode: 'contain' }} />\n                            </TouchableHighlight>\n                            <TouchableHighlight onPress={() => downHandler(id)}>\n                                <Image source={require('../data/images/down-arrow.png')} style={{ width: 20, height: 20, resizeMode: 'contain' }} />\n                            </TouchableHighlight>\n                            <TouchableHighlight onPress={() => deleteHandler(id)}>\n                                <Image source={require('../data/images/trash-bin.png')} style={{ width: 20, height: 20, resizeMode: 'contain' }} />\n                            </TouchableHighlight>\n                        </View>\n                    </View>\n                </View>\n            </Pressable>\n        </View>\n\n    )\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#311b3b',\n        alignItems: 'stretch',\n        justifyContent: 'center',\n        paddingTop: '8%',\n        paddingHorizontal: 16\n    },\n    simpContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        borderBottomWidth: 1\n    },\n    listSimp: {\n        paddingVertical: 16,\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    textSimp: {\n        color: '#fff',\n    },\n    iconContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-evenly',\n    },\n});\n\nexport default SimpsonsList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
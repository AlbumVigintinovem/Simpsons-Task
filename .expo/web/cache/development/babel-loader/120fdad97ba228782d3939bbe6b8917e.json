{"ast":null,"code":"import { useLayoutEffect, useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport IconButton from \"../components/IconButton\";\nimport { SimpsonsDataContext } from \"../store/context/simpsons-data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction SimpsonDetailScreen(_ref) {\n  var _simpsonsCtx$simpsons;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var simpsonsCtx = useContext(SimpsonsDataContext);\n  var simpId = route.params.simpId;\n  var selectedSimpson = (_simpsonsCtx$simpsons = simpsonsCtx.simpsonsData) == null ? void 0 : _simpsonsCtx$simpsons.find(function (simpson) {\n    return simpson.id === simpId;\n  });\n\n  var pressHandler = function pressHandler() {\n    console.log(\"PRESSED 1\");\n  };\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(IconButton, {\n          icon: \"star\",\n          color: \"black\",\n          onPress: pressHandler\n        });\n      }\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Pressable, {\n      android_ripple: {\n        color: '#ccc'\n      },\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.button, pressed ? styles.buttonPressed : null];\n      },\n      children: _jsxs(View, {\n        style: styles.simpContainer,\n        children: [_jsx(Image, {\n          source: {\n            uri: selectedSimpson && selectedSimpson.avatar.split(\"revision\")[0]\n          },\n          style: {\n            width: 240,\n            height: 240,\n            resizeMode: 'contain'\n          }\n        }), _jsxs(Text, {\n          style: styles.textSimp,\n          children: [\" \", selectedSimpson && selectedSimpson.name, \" \"]\n        }), _jsxs(Text, {\n          style: styles.jobSimp,\n          children: [\" \", selectedSimpson && selectedSimpson.job, \" \"]\n        }), _jsxs(Text, {\n          style: styles.descSimp,\n          children: [\" \", selectedSimpson && selectedSimpson.description, \" \"]\n        })]\n      })\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#311b3b',\n    alignItems: 'baseline',\n    justifyContent: 'center',\n    paddingTop: '8%',\n    paddingHorizontal: 16\n  },\n  simpContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  listSimp: {\n    paddingVertical: 16,\n    flex: 3,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  textSimp: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 24\n  },\n  jobSimp: {\n    color: '#fff',\n    fontSize: 20,\n    marginTop: 16\n  },\n  descSimp: {\n    textAlign: 'justify',\n    color: '#fff',\n    marginTop: 16\n  },\n  iconContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  }\n});\nexport default SimpsonDetailScreen;","map":{"version":3,"names":["useLayoutEffect","useContext","IconButton","SimpsonsDataContext","SimpsonDetailScreen","route","navigation","simpsonsCtx","simpId","params","selectedSimpson","simpsonsData","find","simpson","id","pressHandler","console","log","setOptions","headerRight","styles","container","color","pressed","button","buttonPressed","simpContainer","uri","avatar","split","width","height","resizeMode","textSimp","name","jobSimp","job","descSimp","description","StyleSheet","create","flex","flexDirection","backgroundColor","alignItems","justifyContent","paddingTop","paddingHorizontal","listSimp","paddingVertical","fontWeight","fontSize","marginTop","textAlign","iconContainer"],"sources":["/Users/yigitcanderya/Desktop/starting-project/screens/SimpsonDetailScreen.js"],"sourcesContent":["import { useLayoutEffect, useContext } from \"react\";\nimport { Text, View, Image, StyleSheet, Button, Pressable } from \"react-native\";\nimport IconButton from \"../components/IconButton\";\nimport { SimpsonsDataContext } from \"../store/context/simpsons-data\";\n\nfunction SimpsonDetailScreen({ route, navigation }) {\n\n    const simpsonsCtx = useContext(SimpsonsDataContext);\n\n    const simpId = route.params.simpId;\n    const selectedSimpson = simpsonsCtx.simpsonsData?.find((simpson) => simpson.id === simpId);\n\n    const pressHandler = () => {\n        console.log(\"PRESSED 1\")\n    }\n\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerRight: () => {\n                return <IconButton icon=\"star\" color=\"black\" onPress={pressHandler} />\n            }\n        });\n    }, [])\n    return (\n        <View style={styles.container}>\n            <Pressable android_ripple={{ color: '#ccc' }} style={({ pressed }) => [styles.button, pressed ? styles.buttonPressed : null,]}  >\n                <View style={styles.simpContainer} >\n                    <Image source={{ uri: selectedSimpson && selectedSimpson.avatar.split(\"revision\")[0] }} style={{ width: 240, height: 240, resizeMode: 'contain' }} />\n                    <Text style={styles.textSimp} > {selectedSimpson && selectedSimpson.name} </Text>\n                    <Text style={styles.jobSimp} > {selectedSimpson && selectedSimpson.job} </Text>\n                    <Text style={styles.descSimp} > {selectedSimpson && selectedSimpson.description} </Text>\n                </View>\n            </Pressable>\n        </View>\n    )\n\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        backgroundColor: '#311b3b',\n        alignItems: 'baseline',\n        justifyContent: 'center',\n        paddingTop: '8%',\n        paddingHorizontal: 16\n    },\n    simpContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    listSimp: {\n        paddingVertical: 16,\n        flex: 3,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'flex-start'\n    },\n    textSimp: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 24,\n    },\n    jobSimp: {\n        color: '#fff',\n        fontSize: 20,\n        marginTop: 16,\n    },\n    descSimp: {\n        textAlign: 'justify',\n        color: '#fff',\n        marginTop: 16,\n    },\n    iconContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-evenly',\n    },\n})\n\nexport default SimpsonDetailScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
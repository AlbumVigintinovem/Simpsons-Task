{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { CATEGORIES } from \"./data/dummyData\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      simpsons = _useState2[0],\n      setSimpsons = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    axios.get(\"https://5fc9346b2af77700165ae514.mockapi.io/simpsons\").then(function (res) {\n      return setSimpsons(res.data);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Hello World!!!!\"\n    }), _jsxs(Text, {\n      children: [\" \", CATEGORIES[0].title, \" \"]\n    }), _jsx(ScrollView, {\n      children: CATEGORIES.map(function (category) {\n        return _jsxs(Text, {\n          children: [\" \", category.id, \" \"]\n        });\n      })\n    }), loading === true ? _jsx(Text, {\n      children: \"Y\\xFCkleniyor..\"\n    }) : _jsx(ScrollView, {\n      children: simpsons && simpsons.map(function (simp) {\n        return _jsxs(View, {\n          children: [_jsxs(Text, {\n            children: [\" \", simp.name, \" \"]\n          }), _jsx(Image, {\n            source: {\n              uri: \"\" + simp.avatar\n            },\n            style: {\n              width: 400,\n              height: 400\n            }\n          }), _jsxs(Text, {\n            children: [\" \", simp.description, \" \"]\n          })]\n        });\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","useState","useEffect","CATEGORIES","axios","App","simpsons","setSimpsons","loading","setLoading","get","then","res","data","finally","styles","container","title","map","category","id","simp","name","uri","avatar","width","height","description","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/Users/yigitcanderya/Desktop/starting-project/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState, useEffect } from 'react';\nimport { FlatList, ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { CATEGORIES } from './data/dummyData';\nimport axios from 'axios'\n\nexport default function App() {\n\n  const [simpsons, setSimpsons] = useState();\n  const [loading, setLoading] = useState(true);\n\n\n  useEffect(() => {\n    axios.get(\"https://5fc9346b2af77700165ae514.mockapi.io/simpsons\")\n      .then((res) => setSimpsons(res.data)).finally(() => setLoading(false));\n  }, [])\n\n\n  return (\n    <View style={styles.container}>\n      <Text>Hello World!!!!</Text>\n      <Text> {CATEGORIES[0].title} </Text>\n      <ScrollView>\n        {CATEGORIES.map((category) => <Text> {category.id} </Text>)}\n      </ScrollView>\n      {loading === true ?\n        <Text>YÃ¼kleniyor..</Text> : <ScrollView>\n          {simpsons && simpsons.map((simp) =>\n            <View>\n              <Text> {simp.name} </Text>\n              <Image source={{ uri: `${simp.avatar}` }}\n                style={{ width: 400, height: 400 }} />\n              <Text> {simp.description} </Text>\n            </View>\n          )}\n        </ScrollView>}\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;;;AAEA,SAASC,UAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAE5B,gBAAgCJ,QAAQ,EAAxC;EAAA;EAAA,IAAOK,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAA8BN,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAOO,OAAP;EAAA,IAAgBC,UAAhB;;EAGAP,SAAS,CAAC,YAAM;IACdE,KAAK,CAACM,GAAN,CAAU,sDAAV,EACGC,IADH,CACQ,UAACC,GAAD;MAAA,OAASL,WAAW,CAACK,GAAG,CAACC,IAAL,CAApB;IAAA,CADR,EACwCC,OADxC,CACgD;MAAA,OAAML,UAAU,CAAC,KAAD,CAAhB;IAAA,CADhD;EAED,CAHQ,EAGN,EAHM,CAAT;EAMA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEM,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAA;IAAA,EADF,EAEE,MAAC,IAAD;MAAA,gBAAQb,UAAU,CAAC,CAAD,CAAV,CAAcc,KAAtB;IAAA,EAFF,EAGE,KAAC,UAAD;MAAA,UACGd,UAAU,CAACe,GAAX,CAAe,UAACC,QAAD;QAAA,OAAc,MAAC,IAAD;UAAA,gBAAQA,QAAQ,CAACC,EAAjB;QAAA,EAAd;MAAA,CAAf;IADH,EAHF,EAMGZ,OAAO,KAAK,IAAZ,GACC,KAAC,IAAD;MAAA;IAAA,EADD,GAC6B,KAAC,UAAD;MAAA,UACzBF,QAAQ,IAAIA,QAAQ,CAACY,GAAT,CAAa,UAACG,IAAD;QAAA,OACxB,MAAC,IAAD;UAAA,WACE,MAAC,IAAD;YAAA,gBAAQA,IAAI,CAACC,IAAb;UAAA,EADF,EAEE,KAAC,KAAD;YAAO,MAAM,EAAE;cAAEC,GAAG,OAAKF,IAAI,CAACG;YAAf,CAAf;YACE,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAT;cAAcC,MAAM,EAAE;YAAtB;UADT,EAFF,EAIE,MAAC,IAAD;YAAA,gBAAQL,IAAI,CAACM,WAAb;UAAA,EAJF;QAAA,EADwB;MAAA,CAAb;IADa,EAPhC,EAiBE,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EAjBF;EAAA,EADF;AAqBD;AAED,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}